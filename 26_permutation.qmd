---
title: "Resplite"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE,
                      warnings = FALSE,
                      message = FALSE,
                      comment = "#>",
                      cache = TRUE,
                      #results = "hide",
                      digits = 4,
                      error = FALSE)

# ## clean the R environment
# graphics.off()
# rm(list = ls())
# freshr::freshr()

## load packages
library(here, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(JMbayes2, quietly = TRUE)

```

```{css, "css-setup", echo=FALSE}
.scroll-100 {
  max-height: 300px;
  max-width: 1000px;
  overflow-y: auto;
  background-color: inherit;
}

```

## To-do list

-   [x] re-split the data into training and testing 10 times

-   [x] fit the model and calculate the AUC

## Cross-validation

```{r}
## Install necessary packages if you don't have them
# install.packages("furrr")
# install.packages("future")  # If you don't have future package already

## Load the library
library(tidyverse)
library(JMbayes2)
library(doParallel)
library(foreach)

permutation <- function(seed = 555,
                        all_amh0 = all_amh0,
                        all_amh1 = all_amh1,
                        iteration,
                        burnin,
                        thin,
                        chain) {
  # browser()
  set.seed(seed)
  test_id <- sample(all_amh1$id, 300, 
                    replace = FALSE)
  test_amh1 <- all_amh1 %>% 
    filter(id %in% test_id)
  train_amh1 <- all_amh1 %>% 
    filter(!id %in% test_id)
  test_amh0 <- all_amh0 %>% 
    filter(id %in% test_id)
  train_amh0 <- all_amh0 %>% 
    filter(!id %in% test_id)
  
  control = lmeControl(opt = "optim")
  jmcontrol <- list(n_iter = iteration, 
                    n_burnin = burnin, 
                    n_thin = thin,
                    n_chains = chain,
                    save_random_effects = TRUE,
                    seed = seed,
                    cores = chain)
  lme1 <- lme(lamh ~ time,
              data = train_amh0,
              control = control,
              random = ~ time| id)
  
  surv19 <- coxph(Surv(etime, event) ~ 
                    0 + as.factor(bmi_cat)+ 
                    ethnic_black + ethnic_chine + ethnic_hispa + ethnic_japan + 
                    site_c + site_m + site_nj + site_p + site_ucd + site_ucla + 
                    smoke_current_smoker + smoke_past_only,
                  data = train_amh1, 
                  x = TRUE,
                  model = TRUE)
  
  jmb2.119.value.rate <- JMbayes2::jm(Surv_object = surv19,
                                      Mixed_objects = lme1, 
                                      functional_forms = list("lamh" = ~value(lamh) + slope(lamh)),
                                      time_var = "time",
                                      control = jmcontrol) 
  (total <- (iteration - burnin) / thin * chain)

  AUC2  <- map(c(1, 2, 3, 4, 5), 
               ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                    train_amh0,
                                    Tstart = 2,
                                    Dt = .x)))
  AUC3  <- map(c(1, 2, 3, 4, 5), 
               ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                    train_amh0,
                                    Tstart = 3,
                                    Dt = .x)))
  AUC4  <- map(c(1, 2, 3, 4, 5), 
               ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                    train_amh0,
                                    Tstart = 4,
                                    Dt = .x)))
  AUC5  <- map(c(1, 2, 3, 4, 5), 
               ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                    train_amh0,
                                    Tstart = 5,
                                    Dt = .x)))
  AUC6  <- map(c(1, 2, 3, 4, 5), 
               ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                    train_amh0,
                                    Tstart = 6,
                                    Dt = .x)))
  AUC8  <- map(c(1, 2, 3, 4, 5), 
               ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                    train_amh0,
                                    Tstart = 8,
                                    Dt = .x)))
  Tstart2 = map(AUC2, "auc") %>% as.character()
  Tstart3 = map(AUC3, "auc") %>% as.character()
  Tstart4 = map(AUC4, "auc") %>% as.character()
  Tstart5 = map(AUC5, "auc") %>% as.character()
  Tstart6 = map(AUC6, "auc") %>% as.character()
  Tstart8 = map(AUC8, "auc") %>% as.character()
  tbl_auc_train <- rbind(Tstart2, 
                         Tstart3,
                         Tstart4,
                         Tstart5,
                         Tstart6, 
                         Tstart8) %>% 
    as.data.frame() %>%
    mutate_all(as.numeric) %>%
    round(4)
  names(tbl_auc_train) <- c("Dt1", "Dt2", "Dt3", "Dt4", "Dt5")
  
  AUC2_test  <- map(c(1, 2, 3, 4, 5), 
                    ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                         test_amh0,
                                         Tstart = 2,
                                         Dt = .x)))
  
  AUC3_test  <- map(c(1, 2, 3, 4, 5), 
                    ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                         test_amh0,
                                         Tstart = 3,
                                         Dt = .x)))
  AUC4_test  <- map(c(1, 2, 3, 4, 5), 
                    ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                         test_amh0,
                                         Tstart = 4,
                                         Dt = .x)))
  AUC5_test  <- map(c(1, 2, 3, 4, 5), 
                    ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                         test_amh0,
                                         Tstart = 5,
                                         Dt = .x)))
  AUC6_test  <- map(c(1, 2, 3, 4, 5), 
                    ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                         test_amh0,
                                         Tstart = 6,
                                         Dt = .x)))
  AUC8_test  <- map(c(1, 2, 3, 4, 5), 
                    ~try(JMbayes2::tvAUC(jmb2.119.value.rate,
                                         test_amh0,
                                         Tstart = 8,
                                         Dt = .x)))
  
  Tstart2_test = map(AUC2_test, "auc") %>% as.character()
  Tstart3_test = map(AUC3_test, "auc") %>% as.character()
  Tstart4_test = map(AUC4_test, "auc") %>% as.character()
  Tstart5_test = map(AUC5_test, "auc") %>% as.character()
  Tstart6_test = map(AUC6_test, "auc") %>% as.character()
  Tstart8_test = map(AUC8_test, "auc") %>% as.character()
  tbl_auc_test <- rbind(Tstart2_test, 
                        Tstart3_test,
                        Tstart4_test,
                        Tstart5_test,
                        Tstart6_test, 
                        Tstart8_test) %>% 
    as.data.frame() %>%
    mutate_all(as.numeric) %>%
    round(4)
  names(tbl_auc_test) <- c("Dt1", "Dt2", "Dt3", "Dt4", "Dt5")

  
  Brier2  <- map(c(1, 2, 3, 4, 5), 
                 ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                        train_amh0,
                                        Tstart = 2,
                                        Dt = .x)))
  Brier3  <- map(c(1, 2, 3, 4, 5), 
                 ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                        train_amh0,
                                        Tstart = 3,
                                        Dt = .x)))
  Brier4  <- map(c(1, 2, 3, 4, 5), 
                 ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                        train_amh0,
                                        Tstart = 4,
                                        Dt = .x)))
  Brier5  <- map(c(1, 2, 3, 4, 5), 
                 ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                        train_amh0,
                                        Tstart = 5,
                                        Dt = .x)))
  Brier6  <- map(c(1, 2, 3, 4, 5), 
                 ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                        train_amh0,
                                        Tstart = 6,
                                        Dt = .x)))
  Brier8  <- map(c(1, 2, 3, 4, 5), 
                 ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                        train_amh0,
                                        Tstart = 8,
                                        Dt = .x)))
  
  Tstart2 = map(Brier2, "Brier") %>% as.character()
  Tstart3 = map(Brier3, "Brier") %>% as.character()
  Tstart4 = map(Brier4, "Brier") %>% as.character()
  Tstart5 = map(Brier5, "Brier") %>% as.character()
  Tstart6 = map(Brier6, "Brier") %>% as.character()
  Tstart8 = map(Brier8, "Brier") %>% as.character()
  tbl_bs_train <- rbind(Tstart2,
                        Tstart3,
                        Tstart4,
                        Tstart5,
                        Tstart6,
                        Tstart8) %>% 
    as.data.frame() %>%
    mutate_all(as.numeric) %>%
    round(4)
  names(tbl_bs_train) <- c("Dt1", "Dt2", "Dt3", "Dt4", "Dt5")
  Brier2_test  <- map(c(1, 2, 3, 4, 5), 
                      ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                             test_amh0,
                                             Tstart = 2,
                                             Dt = .x)))
  Brier3_test  <- map(c(1, 2, 3, 4, 5), 
                      ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                             test_amh0,
                                             Tstart = 3,
                                             Dt = .x)))
  Brier4_test  <- map(c(1, 2, 3, 4, 5), 
                      ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                             test_amh0,
                                             Tstart = 4,
                                             Dt = .x)))
  Brier5_test  <- map(c(1, 2, 3, 4, 5), 
                      ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                             test_amh0,
                                             Tstart = 5,
                                             Dt = .x)))
  Brier6_test  <- map(c(1, 2, 3, 4, 5), 
                      ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                             test_amh0,
                                             Tstart = 6,
                                             Dt = .x)))
  Brier8_test  <- map(c(1, 2, 3, 4, 5), 
                      ~try(JMbayes2::tvBrier(jmb2.119.value.rate,
                                             test_amh0,
                                             Tstart = 8,
                                             Dt = .x)))
  
  Tstart2_test = map(Brier2_test, "Brier") %>% as.character()
  Tstart3_test = map(Brier3_test, "Brier") %>% as.character()
  Tstart4_test = map(Brier4_test, "Brier") %>% as.character()
  Tstart5_test = map(Brier5_test, "Brier") %>% as.character()
  Tstart6_test = map(Brier6_test, "Brier") %>% as.character()
  Tstart8_test = map(Brier8_test, "Brier") %>% as.character()
  
  tbl_bs_test <- rbind(Tstart2_test,
                       Tstart3_test,
                       Tstart4_test,
                       Tstart5_test,
                       Tstart6_test,
                       Tstart8_test) %>% 
    as.data.frame() %>%
    mutate_all(as.numeric) %>%
    round(4)
  names(tbl_bs_test) <- c("Dt1", "Dt2", "Dt3", "Dt4", "Dt5")
  
  return(amh_result = list(auc_train = tbl_auc_train,
                           auc_test = tbl_auc_test,
                           bs_train = tbl_bs_train,
                           bs_test = tbl_bs_test))
  
}


load("data/all_amh0.rda")
load("data/all_amh1.rda")

```

```{r}
library(foreach)
map_amh_permu <- 
  foreach (i = 553:600, 
           .export = ls(globalenv()),
           .packages = c("tidyverse", 
                         "JMbayes2")) %do% {
                           map_amh <- permutation(seed = i,
                                                  all_amh0 = all_amh0,
                                                  all_amh1 = all_amh1,
                                                  iteration = 150000,
                                                  burnin = 50000,
                                                  thin = 100,
                                                  chain = 3)
                           save(map_amh, file = paste0("results/auc/joint_model_amh_auc_bs_results_seed_", i, ".Rdata"))
                           
                           return(map_amh)
                         }


```
